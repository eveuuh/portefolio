{"ast":null,"code":"var _jsxFileName = \"/home/evou/Code/eve/src/components/contact/Contact.js\";\nimport React, { useState } from \"react\";\nimport './contact.css';\nimport { init } from 'emailjs-com';\n\nconst Contact = props => {\n  init(\"user_ePuvOiCN6rwGVGGlSb703\");\n  /*const [form, setValues]= useState({\n     name:\"\",\n     company:\"\",\n     telephone:\"\",\n     emails: \"\",\n     message: \"\",\n     \n   }) */\n\n  const [name, company, email, message, phone] = useState(\"\");\n\n  const handleChange = e => {\n    /*setValues({ [e.target.name] : e.target.value}) */\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /* let {name, company, phone, email, message} = useState ({\n       name:\"\",\n       company:\"\",\n       telephone:\"\",\n       emails: \"\",\n       message: \"\",\n     }) */\n\n    let nameS = document.getElementById('name');\n    let emailS = document.getElementById('email');\n    let messageS = document.getElementById('message');\n    let formMess = document.querySelector('.form-message');\n\n    const isEmail = () => {\n      let isMail = document.getElementById('not-mail');\n      let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n      if (email.match(regex)) {\n        isMail.style.display = 'none';\n        return true;\n      } else {\n        isMail.style.display = 'block';\n        isMail.style.animation = 'dongle 1s';\n        setTimeout(() => {\n          isMail.style.animation = 'none';\n        }, 1000);\n        return false;\n      }\n    };\n\n    if (name && isEmail() && message) {\n      const templateId = \"template_evj2w8i\";\n      nameS.classList.remove('red');\n      emailS.classList.remove('red');\n      messageS.classList.remove('red');\n      /*   sendFeedback (templateId, [name,\n           company,\n           phone,\n           email,\n           message])*/\n    } else {\n      formMess.innerHTML = \"Merci de remplir correctement les champs requis *\";\n      formMess.style.background = 'rgb(253, 87, 87)';\n      formMess.style.opacity = '1';\n\n      function error(type, path) {\n        if (!type) {\n          path.classList.add('error');\n        }\n      }\n\n      error(name, nameS);\n      error(email, emailS);\n      error(message, messageS);\n    }\n  };\n  /*const sendFeedback= (templateId, variables) => {\n    let formMess = document.querySelector('.form-message');\n     window.emailjs\n      .send(\"service_csj42s1\", templateId, variables)\n      .then((res) => {\n        formMess.innerHTML = \"Message envoyé ! Nous vous recontacterons dès que possible.\";\n        formMess.style.background = '#00c1ec';\n        formMess.style.opacity = '1';\n         document.getElementById('name').classList.remove('error');\n        document.getElementById('email').classList.remove('error');\n        document.getElementById('message').classList.remove('error');\n         /*setState({\n          name: \"\",\n          company: \"\",\n          phone: \"\",\n          email: \"\",\n          message: \"\",\n        });\n        setTimeout(() => {\n          formMess.style.opacity = '0';\n        }, 5000);\n      })\n      .catch((err) =>\n        formMess.innerHTML = \"Une erreur s'est produite, veuillez réessayer.\"\n      );\n    }*/\n\n\n  return (\n    /*#__PURE__*/\n\n    /*\n    <div className=\"formContact\">\n    <form className=\"contact-form\">\n      <h2 className=\"contact-form-title\">Si mon profil vous interesse, contactez moi via ce formulaire, je me ferai une joie de vous répondre dans les plus brefs délais </h2>\n      <div className=\"form-content\">\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          required\n          onChange={handleChange.bind(this)}\n          placeholder=\"Nom *\"\n          value={name}\n          autoComplete=\"off\"\n        />\n        <input\n          type=\"text\"\n          id=\"company\"\n          name=\"company\"\n          onChange={handleChange.bind(this)}\n          placeholder=\"Entreprise\"\n          value={company}\n        />\n        <input\n          type=\"text\"\n          id=\"phone\"\n          name=\"phone\"\n          onChange={handleChange.bind(this)}\n          placeholder=\"Téléphone\"\n          value={phone}\n        />\n        <div className=\"email-content\">\n          <label id=\"not-mail\">Email non valide</label>\n          <input\n            type=\"mail\"\n            id=\"email\"\n            name=\"email\"\n            required\n            onChange={handleChange.bind(this)}\n            placeholder=\"Email *\"\n            value={email}\n            autoComplete=\"off\"\n          />\n        </div>\n        <textarea\n          id=\"message\"\n          name=\"message\"\n          onChange={handleChange.bind(this)}\n          placeholder=\"Message *\"\n          required\n          value={message}\n        />\n      </div>\n      <input className=\"formButton\" type=\"button\" value=\"Envoyer\" onClick={handleSubmit.bind(this)} />\n      <div className=\"end.form-message\"></div>\n    </form>\n    </div>*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    })\n  );\n};\n\nexport default Contact;","map":{"version":3,"sources":["/home/evou/Code/eve/src/components/contact/Contact.js"],"names":["React","useState","init","Contact","props","name","company","email","message","phone","handleChange","e","handleSubmit","preventDefault","nameS","document","getElementById","emailS","messageS","formMess","querySelector","isEmail","isMail","regex","match","style","display","animation","setTimeout","templateId","classList","remove","innerHTML","background","opacity","error","type","path","add"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,SAAQC,IAAR,QAAoB,aAApB;;AAEA,MAAMC,OAAO,GAAGC,KAAD,IAAU;AACrBF,EAAAA,IAAI,CAAC,4BAAD,CAAJ;AACD;;;;;;;;;AAQC,QAAM,CAACG,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,KAAhC,IAAyCR,QAAQ,CAAC,EAAD,CAAvD;;AAEF,QAAMS,YAAY,GAAEC,CAAD,IAAM;AACxB;AAEA,GAHD;;AAIA,QAAMC,YAAY,GAAED,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACE,cAAF;AACD;;;;;;;;AAOC,QAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAZ;AACA,QAAIC,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAb;AACA,QAAIE,QAAQ,GAAGH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAf;AACA,QAAIG,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,eAAvB,CAAf;;AAEA,UAAMC,OAAO,GAAG,MAAM;AACpB,UAAIC,MAAM,GAAGP,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAb;AACA,UAAIO,KAAK,GAAG,iDAAZ;;AAEA,UAAGhB,KAAK,CAACiB,KAAN,CAAYD,KAAZ,CAAH,EAAuB;AACrBD,QAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACLJ,QAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuB,OAAvB;AACAJ,QAAAA,MAAM,CAACG,KAAP,CAAaE,SAAb,GAAyB,WAAzB;AACAC,QAAAA,UAAU,CAAC,MAAM;AACfN,UAAAA,MAAM,CAACG,KAAP,CAAaE,SAAb,GAAyB,MAAzB;AACD,SAFS,EAEP,IAFO,CAAV;AAGA,eAAO,KAAP;AACD;AACF,KAfD;;AAiBA,QAAItB,IAAI,IAAIgB,OAAO,EAAf,IAAqBb,OAAzB,EAAiC;AAC/B,YAAMqB,UAAU,GAAG,kBAAnB;AAEAf,MAAAA,KAAK,CAACgB,SAAN,CAAgBC,MAAhB,CAAuB,KAAvB;AACAd,MAAAA,MAAM,CAACa,SAAP,CAAiBC,MAAjB,CAAwB,KAAxB;AACAb,MAAAA,QAAQ,CAACY,SAAT,CAAmBC,MAAnB,CAA0B,KAA1B;AAEH;;;;;AAKE,KAZD,MAYO;AACLZ,MAAAA,QAAQ,CAACa,SAAT,GAAqB,mDAArB;AACAb,MAAAA,QAAQ,CAACM,KAAT,CAAeQ,UAAf,GAA4B,kBAA5B;AACAd,MAAAA,QAAQ,CAACM,KAAT,CAAeS,OAAf,GAAyB,GAAzB;;AAEA,eAASC,KAAT,CAAeC,IAAf,EAAqBC,IAArB,EAA0B;AACxB,YAAI,CAACD,IAAL,EAAW;AACTC,UAAAA,IAAI,CAACP,SAAL,CAAeQ,GAAf,CAAmB,OAAnB;AACD;AACF;;AACDH,MAAAA,KAAK,CAAC9B,IAAD,EAAMS,KAAN,CAAL;AACAqB,MAAAA,KAAK,CAAC5B,KAAD,EAAQU,MAAR,CAAL;AACAkB,MAAAA,KAAK,CAAC3B,OAAD,EAAUU,QAAV,CAAL;AACD;AACF,GAzDD;AA2DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BE;AAAA;;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1DF;AA4DD,CAtKH;;AAwKA,eAAef,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport './contact.css';\nimport{ init } from 'emailjs-com';\n\nconst Contact= (props) =>{ \n    init(\"user_ePuvOiCN6rwGVGGlSb703\");\n   /*const [form, setValues]= useState({\n      name:\"\",\n      company:\"\",\n      telephone:\"\",\n      emails: \"\",\n      message: \"\",\n      \n    }) */\n    const [name, company, email, message, phone] = useState(\"\");\n\n  const handleChange=(e) =>{\n   /*setValues({ [e.target.name] : e.target.value}) */\n  \n  }\n  const handleSubmit=(e) =>{\n    e.preventDefault();\n   /* let {name, company, phone, email, message} = useState ({\n      name:\"\",\n      company:\"\",\n      telephone:\"\",\n      emails: \"\",\n      message: \"\",\n    }) */\n    let nameS = document.getElementById('name');\n    let emailS = document.getElementById('email');\n    let messageS = document.getElementById('message');\n    let formMess = document.querySelector('.form-message');\n\n    const isEmail = () => {\n      let isMail = document.getElementById('not-mail')\n      let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n      if(email.match(regex)) {\n        isMail.style.display = 'none';\n        return true;\n      } else {\n        isMail.style.display = 'block';\n        isMail.style.animation = 'dongle 1s';\n        setTimeout(() => {\n          isMail.style.animation = 'none';\n        }, 1000);\n        return false;\n      }\n    }\n\n    if (name && isEmail() && message){\n      const templateId = \"template_evj2w8i\";\n\n      nameS.classList.remove('red');\n      emailS.classList.remove('red');\n      messageS.classList.remove('red');\n\n   /*   sendFeedback (templateId, [name,\n        company,\n        phone,\n        email,\n        message])*/\n    } else {\n      formMess.innerHTML = \"Merci de remplir correctement les champs requis *\";\n      formMess.style.background = 'rgb(253, 87, 87)';\n      formMess.style.opacity = '1';\n\n      function error(type, path){\n        if (!type) {\n          path.classList.add('error');\n        }\n      }\n      error(name,nameS);\n      error(email, emailS);\n      error(message, messageS);\n    }\n  }\n\n  /*const sendFeedback= (templateId, variables) => {\n    let formMess = document.querySelector('.form-message');\n\n    window.emailjs\n      .send(\"service_csj42s1\", templateId, variables)\n      .then((res) => {\n        formMess.innerHTML = \"Message envoyé ! Nous vous recontacterons dès que possible.\";\n        formMess.style.background = '#00c1ec';\n        formMess.style.opacity = '1';\n\n        document.getElementById('name').classList.remove('error');\n        document.getElementById('email').classList.remove('error');\n        document.getElementById('message').classList.remove('error');\n\n        /*setState({\n          name: \"\",\n          company: \"\",\n          phone: \"\",\n          email: \"\",\n          message: \"\",\n        });\n        setTimeout(() => {\n          formMess.style.opacity = '0';\n        }, 5000);\n      })\n      .catch((err) =>\n        formMess.innerHTML = \"Une erreur s'est produite, veuillez réessayer.\"\n      );\n    }*/\n\n \n    return (\n      /*\n      <div className=\"formContact\">\n      <form className=\"contact-form\">\n        <h2 className=\"contact-form-title\">Si mon profil vous interesse, contactez moi via ce formulaire, je me ferai une joie de vous répondre dans les plus brefs délais </h2>\n        <div className=\"form-content\">\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            required\n            onChange={handleChange.bind(this)}\n            placeholder=\"Nom *\"\n            value={name}\n            autoComplete=\"off\"\n          />\n          <input\n            type=\"text\"\n            id=\"company\"\n            name=\"company\"\n            onChange={handleChange.bind(this)}\n            placeholder=\"Entreprise\"\n            value={company}\n          />\n          <input\n            type=\"text\"\n            id=\"phone\"\n            name=\"phone\"\n            onChange={handleChange.bind(this)}\n            placeholder=\"Téléphone\"\n            value={phone}\n          />\n          <div className=\"email-content\">\n            <label id=\"not-mail\">Email non valide</label>\n            <input\n              type=\"mail\"\n              id=\"email\"\n              name=\"email\"\n              required\n              onChange={handleChange.bind(this)}\n              placeholder=\"Email *\"\n              value={email}\n              autoComplete=\"off\"\n            />\n          </div>\n          <textarea\n            id=\"message\"\n            name=\"message\"\n            onChange={handleChange.bind(this)}\n            placeholder=\"Message *\"\n            required\n            value={message}\n          />\n        </div>\n        <input className=\"formButton\" type=\"button\" value=\"Envoyer\" onClick={handleSubmit.bind(this)} />\n        <div className=\"end.form-message\"></div>\n      </form>\n      </div>*/\n      <div></div>\n    ); \n  }\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}